/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package internalPage;

import static com.sun.webkit.perf.WCFontPerfLogger.reset;
import config.db_configuration;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author SCC-COMLAB
 */
public class Products extends javax.swing.JInternalFrame {

    /**
     * Creates new form Stocks
     */
    public Products() {
        initComponents();
        displayData();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi=(BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
    }
    
    public void reset(){
        mid.setText("");
       mflavor.setText("");
      mquan.setText("");
       msize.setText("");
       mprice.setText("");
        
    }
    public void displayData(){
       
        try{
       
            db_configuration dbc = new db_configuration();
            ResultSet rs = dbc.getData("SELECT * FROM tbl_milktea");
            milktea_table.setModel(DbUtils.resultSetToTableModel(rs));
       
        }catch(SQLException ex){
            System.out.println("Error Message: "+ex);
       
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        milktea_table = new javax.swing.JTable();
        DELETE = new javax.swing.JButton();
        mprice = new javax.swing.JTextField();
        mid = new javax.swing.JTextField();
        mflavor = new javax.swing.JTextField();
        mquan = new javax.swing.JTextField();
        msize = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        update = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(750, 440));

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(null);

        delete.setBackground(new java.awt.Color(0, 204, 204));
        delete.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete);
        delete.setBounds(100, 370, 90, 30);

        milktea_table.setBackground(new java.awt.Color(0, 204, 204));
        milktea_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                milktea_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(milktea_table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 90, 670, 140);

        DELETE.setBackground(new java.awt.Color(0, 204, 204));
        DELETE.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        DELETE.setText("DISPLAY");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });
        jPanel1.add(DELETE);
        DELETE.setBounds(560, 370, 90, 30);

        mprice.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jPanel1.add(mprice);
        mprice.setBounds(440, 290, 230, 30);

        mid.setEditable(false);
        mid.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        mid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                midActionPerformed(evt);
            }
        });
        jPanel1.add(mid);
        mid.setBounds(120, 250, 230, 30);

        mflavor.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        mflavor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mflavorActionPerformed(evt);
            }
        });
        jPanel1.add(mflavor);
        mflavor.setBounds(120, 290, 230, 30);

        mquan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        mquan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mquanActionPerformed(evt);
            }
        });
        jPanel1.add(mquan);
        mquan.setBounds(120, 330, 230, 30);

        msize.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jPanel1.add(msize);
        msize.setBounds(440, 250, 230, 30);

        jButton2.setBackground(new java.awt.Color(0, 204, 204));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButton2.setText("CLEAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(220, 370, 90, 30);

        update.setBackground(new java.awt.Color(0, 204, 204));
        update.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update);
        update.setBounds(450, 370, 90, 30);

        insert.setBackground(new java.awt.Color(0, 204, 204));
        insert.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        insert.setText("INSERT");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });
        jPanel1.add(insert);
        insert.setBounds(330, 370, 90, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Price:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(370, 290, 70, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(50, 250, 70, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Flavor:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(50, 290, 70, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Quantity:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 330, 70, 30);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Size:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(370, 250, 70, 30);

        jPanel2.setBackground(new java.awt.Color(0, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("PRODUCTS");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 40));

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 20, 150, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
     int rowIndex = milktea_table.getSelectedRow();
       if(rowIndex < 0){
           JOptionPane.showMessageDialog(null, "Please select a data first");
       }else{
            TableModel model = milktea_table.getModel();
            Object value = model.getValueAt(rowIndex, 0);
            String id = value.toString();
             int a=JOptionPane.showConfirmDialog(null,"Are you sure?");  
                    if(a==JOptionPane.YES_OPTION){  
                            db_configuration dbc = new db_configuration();
                            dbc.deleteData(Integer.parseInt(id));
                            displayData();
                            reset();
                    }    
       }       
    }//GEN-LAST:event_deleteActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
       displayData();
    
    }//GEN-LAST:event_DELETEActionPerformed

    private void midActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_midActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_midActionPerformed

    private void mquanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mquanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mquanActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     reset();        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
       db_configuration dbc = new db_configuration();
        int num = dbc.updateData("UPDATE tbl_milktea "
                + "SET m_flavor= '"+mflavor.getText()+"', m_price='"+mquan.getText()+"', "
                        + "m_quan='"+msize.getText()+"', m_size='"+mprice.getText()+"'  "
                                + "WHERE m_id = '"+mid.getText()+"'");
       
        if(num == 0){
           
        }else{
           JOptionPane.showMessageDialog(null, "Updated Successfully!");
           displayData();
           reset();
        }
    }//GEN-LAST:event_updateActionPerformed

    private void milktea_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_milktea_tableMouseClicked
      int rowIndex = milktea_table.getSelectedRow();
        if(rowIndex < 0){
            
        }else{
            TableModel model = milktea_table.getModel();
            mid.setText(""+model.getValueAt(rowIndex,0));
            mflavor.setText(""+model.getValueAt(rowIndex,1));
            mquan.setText(""+model.getValueAt(rowIndex,2));
            msize.setText(""+model.getValueAt(rowIndex,3));
            mprice.setText(""+model.getValueAt(rowIndex,4));

            
        }
    }//GEN-LAST:event_milktea_tableMouseClicked

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
       
        if (mflavor.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please type the Flavor!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }else if(mquan.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please type the Price", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }else if (msize.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please type the Quantity!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }else if(mprice.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please type the Size!", "Error", JOptionPane.ERROR_MESSAGE);
            return;      
        }      
            
        db_configuration dbc = new db_configuration();
        dbc.insertData("INSERT INTO tbl_milktea(m_flavor, m_price, m_quan,m_size) "
                + "VALUES ('"+mflavor.getText()+"', '"+mquan.getText()+"','"+msize.getText()+"','"+mprice.getText()+"')");
        displayData();
        reset();
    }//GEN-LAST:event_insertActionPerformed

    private void mflavorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mflavorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mflavorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DELETE;
    private javax.swing.JButton delete;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mflavor;
    private javax.swing.JTextField mid;
    private javax.swing.JTable milktea_table;
    private javax.swing.JTextField mprice;
    private javax.swing.JTextField mquan;
    private javax.swing.JTextField msize;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
